/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.challengercity.revise;

import java.awt.Font;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author Sgrt.
 */
public class Revise extends javax.swing.JFrame {

    /**
     * Creates new form Revise
     */
    public Revise() {
        setTitle("Revise - v"+version);
        try {
            mcFont = Font.createFont(Font.TRUETYPE_FONT, getClass().getResourceAsStream("/com/challengercity/revise/resources/minecraft_font.ttf"));
        } catch (Exception ex) {
            ex.printStackTrace();
            setTitle("Revise - Font did not load"); // TODO Might need to update for the int[] NBT tag
        }
        initComponents();
        sizingOutput.setUI(new VerticalLabelUI(true)); // TODO On saving as a book and quill with a title, rename the book to that name
        curBook.getPages().add("Page 1");
        curBook.getPages().add("Page 2");
        curBook.getPages().add("Page 3");
        curBook.getPages().add("Page 4");
        curBook.getPages().add("Page 5");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boldButton = new javax.swing.JButton();
        italicsButton = new javax.swing.JButton();
        underlineButton = new javax.swing.JButton();
        strikeButton = new javax.swing.JButton();
        randomButton = new javax.swing.JButton();
        colorButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        formattedPanel = new javax.swing.JPanel();
        htmlPane = new javax.swing.JTextPane();
        sourcePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sourcePane = new javax.swing.JTextPane();
        signedToggle = new javax.swing.JToggleButton();
        sizingOutput = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pageBack = new javax.swing.JButton();
        pageForward = new javax.swing.JButton();
        authorTextBox = new javax.swing.JTextField();
        titleTextBox = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        pageList = new com.challengercity.revise.DragDropList();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Revise");
        setBackground(new java.awt.Color(200, 190, 175));

        boldButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Bold.png"))); // NOI18N
        boldButton.setToolTipText("Bold");
        boldButton.setBorder(null);
        boldButton.setBorderPainted(false);
        boldButton.setContentAreaFilled(false);
        boldButton.setFocusable(false);
        boldButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boldButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        italicsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Italic.png"))); // NOI18N
        italicsButton.setToolTipText("Italics");
        italicsButton.setBorder(null);
        italicsButton.setBorderPainted(false);
        italicsButton.setContentAreaFilled(false);
        italicsButton.setFocusable(false);
        italicsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        italicsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        underlineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Underline.png"))); // NOI18N
        underlineButton.setToolTipText("Underline");
        underlineButton.setBorder(null);
        underlineButton.setBorderPainted(false);
        underlineButton.setContentAreaFilled(false);
        underlineButton.setFocusable(false);
        underlineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        underlineButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        strikeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Strike.png"))); // NOI18N
        strikeButton.setToolTipText("Strikethrough");
        strikeButton.setBorder(null);
        strikeButton.setBorderPainted(false);
        strikeButton.setContentAreaFilled(false);
        strikeButton.setFocusable(false);
        strikeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        strikeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        randomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Random.png"))); // NOI18N
        randomButton.setToolTipText("Obscure");
        randomButton.setBorder(null);
        randomButton.setBorderPainted(false);
        randomButton.setContentAreaFilled(false);
        randomButton.setFocusable(false);
        randomButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        randomButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        colorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Color.png"))); // NOI18N
        colorButton.setToolTipText("Color");
        colorButton.setBorder(null);
        colorButton.setBorderPainted(false);
        colorButton.setContentAreaFilled(false);
        colorButton.setFocusable(false);
        colorButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colorButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Reset.png"))); // NOI18N
        resetButton.setToolTipText("Reset Formatting");
        resetButton.setBorder(null);
        resetButton.setBorderPainted(false);
        resetButton.setContentAreaFilled(false);
        resetButton.setFocusable(false);
        resetButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jTabbedPane1.setBackground(new java.awt.Color(124, 42, 42));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        formattedPanel.setBackground(new java.awt.Color(200, 190, 175));

        htmlPane.setBackground(new java.awt.Color(250, 240, 214));
        htmlPane.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 250, 235), new java.awt.Color(230, 220, 185)));
        htmlPane.setContentType("text/html");
        htmlPane.setText("<html>\n  <head>\n\n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n    </p>\n  </body>\n</html>\n");
        htmlPane.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        htmlPane.setSelectionColor(new java.awt.Color(124, 42, 42));

        org.jdesktop.layout.GroupLayout formattedPanelLayout = new org.jdesktop.layout.GroupLayout(formattedPanel);
        formattedPanel.setLayout(formattedPanelLayout);
        formattedPanelLayout.setHorizontalGroup(
            formattedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, htmlPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 392, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        formattedPanelLayout.setVerticalGroup(
            formattedPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(formattedPanelLayout.createSequentialGroup()
                .add(htmlPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 495, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Formatted", formattedPanel);

        sourcePanel.setBackground(new java.awt.Color(200, 190, 175));

        jScrollPane2.setBackground(new java.awt.Color(250, 240, 214));
        jScrollPane2.setBorder(null);

        sourcePane.setBackground(new java.awt.Color(250, 240, 214));
        sourcePane.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 250, 235), new java.awt.Color(230, 220, 185)));
        sourcePane.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        sourcePane.setSelectionColor(new java.awt.Color(124, 42, 42));
        jScrollPane2.setViewportView(sourcePane);

        org.jdesktop.layout.GroupLayout sourcePanelLayout = new org.jdesktop.layout.GroupLayout(sourcePanel);
        sourcePanel.setLayout(sourcePanelLayout);
        sourcePanelLayout.setHorizontalGroup(
            sourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
        );
        sourcePanelLayout.setVerticalGroup(
            sourcePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Source", sourcePanel);

        signedToggle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Signed.png"))); // NOI18N
        signedToggle.setToolTipText("Sign or unsign the current book");
        signedToggle.setBorderPainted(false);
        signedToggle.setRolloverEnabled(true);
        signedToggle.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Signed.png"))); // NOI18N
        signedToggle.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Signed.png"))); // NOI18N
        signedToggle.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Ingame.png"))); // NOI18N

        sizingOutput.setText("Char #");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/logo.png"))); // NOI18N

        pageBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/LeftW.png"))); // NOI18N
        pageBack.setBorderPainted(false);
        pageBack.setRolloverEnabled(true);
        pageBack.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/LeftR.png"))); // NOI18N
        pageBack.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/LeftR.png"))); // NOI18N
        pageBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageBackActionPerformed(evt);
            }
        });

        pageForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/RightW.png"))); // NOI18N
        pageForward.setBorderPainted(false);
        pageForward.setRolloverEnabled(true);
        pageForward.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/RightR.png"))); // NOI18N
        pageForward.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/RightR.png"))); // NOI18N
        pageForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pageForwardActionPerformed(evt);
            }
        });

        authorTextBox.setBackground(new java.awt.Color(250, 240, 214));
        authorTextBox.setText("Author");
        authorTextBox.setToolTipText("Author");
        authorTextBox.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 250, 235), new java.awt.Color(230, 220, 185)));
        authorTextBox.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        authorTextBox.setSelectionColor(new java.awt.Color(124, 42, 42));

        titleTextBox.setBackground(new java.awt.Color(250, 240, 214));
        titleTextBox.setText("Title");
        titleTextBox.setToolTipText("Title");
        titleTextBox.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 250, 235), new java.awt.Color(230, 220, 185)));
        titleTextBox.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        titleTextBox.setSelectionColor(new java.awt.Color(124, 42, 42));

        jScrollPane4.setBackground(new java.awt.Color(200, 190, 175));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Pages"));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pageList.setBackground(new java.awt.Color(200, 190, 175));
        pageList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Page 1", "Page 2", "Page 3", "Page 4", "Page 5", "Add Page" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        pageList.setSelectionBackground(new java.awt.Color(124, 42, 42));
        pageList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pageListMouseClicked(evt);
            }
        });
        pageList.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pageListMouseDragged(evt);
            }
        });
        jScrollPane4.setViewportView(pageList);

        jMenu1.setText("File");

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/New.png"))); // NOI18N
        jMenuItem8.setText("New");
        jMenuItem8.setToolTipText("Create a new book");
        jMenu1.add(jMenuItem8);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Load.png"))); // NOI18N
        jMenuItem2.setText("Open...");
        jMenuItem2.setToolTipText("Open a book");
        jMenu1.add(jMenuItem2);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Load.png"))); // NOI18N
        jMenu7.setText("Open Recent");
        jMenu7.setToolTipText("Open a recent book");
        jMenu1.add(jMenu7);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Save.png"))); // NOI18N
        jMenuItem1.setText("Save");
        jMenuItem1.setToolTipText("Save the current book");
        jMenu1.add(jMenuItem1);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/SaveAs.png"))); // NOI18N
        jMenu5.setText("Save As");
        jMenu5.setToolTipText("Save the current book as something else");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Ingame.png"))); // NOI18N
        jMenuItem3.setText("McBook");
        jMenu5.add(jMenuItem3);

        jMenu1.add(jMenu5);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Globe.png"))); // NOI18N
        jMenu6.setText("Export");
        jMenu6.setToolTipText("Export the current book");

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Steve.png"))); // NOI18N
        jMenuItem4.setText("Single Player");
        jMenuItem4.setToolTipText("Export to a single-player world");
        jMenu6.add(jMenuItem4);

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Local Server.png"))); // NOI18N
        jMenuItem5.setText("Owned Server");
        jMenuItem5.setToolTipText("Export to a player.dat");
        jMenu6.add(jMenuItem5);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/RemoteServer.png"))); // NOI18N
        jMenuItem7.setText("Unowned Server");
        jMenuItem7.setToolTipText("Open the client-pasting GUI");
        jMenu6.add(jMenuItem7);

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/challengercity/revise/resources/Bookshelf.png"))); // NOI18N
        jMenuItem6.setText("MCLibrary");
        jMenuItem6.setToolTipText("Upload to the MCLibrary");
        jMenu6.add(jMenuItem6);

        jMenu1.add(jMenu6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem12.setText("Paste in Text");
        jMenu2.add(jMenuItem12);

        jMenuItem13.setText("Copy Book to Clipboard");
        jMenu2.add(jMenuItem13);

        jMenuItem11.setText("Find in Book");
        jMenu2.add(jMenuItem11);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("Help");

        jMenuItem9.setText("About");
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("Report Bug");
        jMenu4.add(jMenuItem10);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pageForward, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pageBack, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(titleTextBox)
                        .add(authorTextBox))
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, boldButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, italicsButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, underlineButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, strikeButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, randomButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, colorButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, resetButton)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, signedToggle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, sizingOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(titleTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(authorTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 294, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(pageBack)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pageForward)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addContainerGap())
            .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(boldButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(italicsButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(underlineButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(strikeButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(randomButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(colorButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(resetButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(signedToggle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sizingOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 97, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 0) { // If selecting the html pane
            htmlPane.setText(FormatConverter.convertMcToHtml(sourcePane.getText()));
        } else {
            sourcePane.setText(FormatConverter.convertHtmlToMc(htmlPane.getText())); // TODO Make set literal text
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void pageListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pageListMouseClicked
        if (!pageList.isSelectionEmpty() && pageList.getSelectedValue().equals("Add Page")) {
            curBook.getPages().add("");
            pageList.setSelectedIndex(curBook.getPages().size()-1); // TODO Right-click undos last page rearrangement for some reason
        }
        updateVisualsFromBook();
    }//GEN-LAST:event_pageListMouseClicked

    private void pageListMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pageListMouseDragged
        ListModel newPages = pageList.getModel();
        curBook.getPages().clear();
        for (int i = 0; i < newPages.getSize(); i++) {
            if (!((String) newPages.getElementAt(i)).equals("Add Page")) {
                curBook.getPages().add((String) newPages.getElementAt(i));
            }
        }
        updateVisualsFromBook();
    }//GEN-LAST:event_pageListMouseDragged

    private void pageBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageBackActionPerformed
        // TODO Go back a page
    }//GEN-LAST:event_pageBackActionPerformed

    private void pageForwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pageForwardActionPerformed
        // TODO Go forward a page adding a page if necessary
    }//GEN-LAST:event_pageForwardActionPerformed

    public void updateVisualsFromBook() {
        DefaultListModel newList = new DefaultListModel();
        for (String str : curBook.getPages()) {
            newList.addElement(str);
        }
        newList.addElement("Add Page");
        pageList.setModel(newList);
        titleTextBox.setText(curBook.getTitle());
        authorTextBox.setText(curBook.getAuthor());
    }
    
    public Book getBook() {
        return curBook;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        
        /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Revise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Revise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Revise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Revise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        */
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Revise().setVisible(true);
            }
        });
    }
    
    public static Font mcFont;
    private String version = "1.2.1"; // TODO Add right-click for page deletion or drag to trash area
    private Book curBook = new Book("Title","Author",(java.util.List) new java.util.LinkedList<String>(), new java.io.File(""), (byte) 0);
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorTextBox;
    private javax.swing.JButton boldButton;
    private javax.swing.JButton colorButton;
    private javax.swing.JPanel formattedPanel;
    private javax.swing.JTextPane htmlPane;
    private javax.swing.JButton italicsButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton pageBack;
    private javax.swing.JButton pageForward;
    private com.challengercity.revise.DragDropList pageList;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JToggleButton signedToggle;
    private javax.swing.JLabel sizingOutput;
    private javax.swing.JTextPane sourcePane;
    private javax.swing.JPanel sourcePanel;
    private javax.swing.JButton strikeButton;
    private javax.swing.JTextField titleTextBox;
    private javax.swing.JButton underlineButton;
    // End of variables declaration//GEN-END:variables
}
